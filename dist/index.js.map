{"version":3,"file":"index.js","mappings":"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IAAP,CAAY8K,IAAI,CAACnX,QAAjB,EAA2B4N,IAA3B,CAA9B,CAApB;AACH;;AAED0K,UAAAA,UAAU,CAACjL,MAAX,GAAoBlC,MAAM,CAACoB,GAAP,CAAW+L,UAAU,CAACjL,MAAtB,EAA8BiL,UAAU,CAAC1K,IAAzC,CAApB;AAEA,iBAAO0K,UAAP;AACH,SA1BD;AA4BA;AACJ;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;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CA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEC,OAzzDD;AA4zDA;;AAAO,KAl0OG;AAm0OV;;AACA;AAAO,cAASxmB,MAAT,EAAiBD,OAAjB,EAA0B;AAEjC;A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","sources":["webpack://suika_game/./src/audio-player.js","webpack://suika_game/./src/ball.js","webpack://suika_game/./src/matter.js","webpack://suika_game/./src/rigid-body.js","webpack://suika_game/./src/screen.js","webpack://suika_game/./src/style.scss?bc3b","webpack://suika_game/webpack/bootstrap","webpack://suika_game/webpack/runtime/define property getters","webpack://suika_game/webpack/runtime/global","webpack://suika_game/webpack/runtime/hasOwnProperty shorthand","webpack://suika_game/webpack/runtime/make namespace object","webpack://suika_game/./src/game.js"],"sourcesContent":["\nexport class AudioPlayer {\n  constructor() {\n    const bound = new Audio(\"bound\", \"../audio/bound.mp3\");\n    const union = new Audio(\"union\", \"../audio/union.mp3\");\n    this.data = [bound.data, union.data]\n    this.audioContext = new AudioContext();\n    window.AudioContext = window.AudioContext || window.webkitAudioContext; // 互換対応\n  }\n\n  playFirstSound(name) { // 同期にしてスマホでの再生をイベントで許可するため用の再生\n    let dir = null;\n    let request = null;\n    for (let i = 0; i < this.data.length; i++) {\n      if (this.data[i].name === name) {\n        dir = this.data[i].dir;\n      }\n    }\n    let src = null;\n    const audioPlayer = this;\n    request = new XMLHttpRequest();\n    request.open(\"GET\", dir, true);\n    request.responseType = \"arraybuffer\";\n    request.onload = completeOnLoad;\n    request.send();\n    function completeOnLoad() {\n      audioPlayer.audioContext.decodeAudioData(request.response, function (buf) {\n        src.buffer = buf;\n        src.connect(audioPlayer.audioContext.destination);\n        src.start(0);\n      });\n    }\n    src = audioPlayer.audioContext.createBufferSource();\n  };\n\n  playSound(name) { // 音の再生が単発の再生\n    let dir = null;\n    for (let i = 0; i < this.data.length; i++) {\n      if (this.data[i].name === name) {\n        dir = this.data[i].dir;\n      }\n    }\n    let src = null;\n    const audioPlayer = this;\n    fetch(dir, {method:\"GET\", }).then(response => response.arrayBuffer()).then(arrayBuffer => {\n      const res = arrayBuffer;\n      audioPlayer.audioContext.decodeAudioData(res, function (buf) {\n        src.buffer = buf;\n        src.connect(audioPlayer.audioContext.destination);\n        src.start(0);\n      });\n      src = audioPlayer.audioContext.createBufferSource();\n    })\n  };\n\n  playBgm(name) { // 音の再生がループする再生\n    let dir = null;\n    for (let i = 0; i < this.data.length; i++) {\n      if (this.data[i].name === name) {\n        dir = this.data[i].dir;\n      }\n    }\n    let src = null;\n    const audioPlayer = this;\n    fetch(name.dir, {method:\"GET\", }).then(response => response.arrayBuffer()).then(arrayBuffer => {\n      const res = arrayBuffer;\n      audioPlayer.audioContext.decodeAudioData(res, function (buf) {\n        src.loop = true;\n        src.buffer = buf;\n        src.connect(audioPlayer.audioContext.destination);\n        src.start(0);\n      });\n      src = audioPlayer.audioContext.createBufferSource();\n    })\n  };\n}\n\nclass Audio {\n  constructor(name, dir) {\n    this.name = name;\n    this.dir = dir;\n  }\n\n  get data() {\n    return {name: this.name, dir: this.dir}\n  }\n}","'use strict';\n\nexport class Ball {\n  constructor(bodies, matterWorld, World, gameOverHeight, forCanvasHighResolution) {\n    this.image = new Image();\n    this.bodies = bodies; // 物理シミュレーション上で剛体を設定する\n    this.matterWorld = matterWorld; // 物理シミュレーションを構成するオブジェクトを管理する、Compositeとほぼ同じ\n    this.World = World; // 物理シミュレーションを行う環境を用意する\n    this.gameOverHeight = gameOverHeight; // ゲームの終了判定の高さ\n    this.forCanvasHighResolution = forCanvasHighResolution;// キャンバスの画質を向上させるためにキャンバスに適当な数字を乗算していうる\n\n    this.imgs = [ // 果物の画像を格納\n      { name : \"ballTypeA\", img : \"./img/fruit/modified_size/img_size_30.png\", radius : 11 },\n      { name : \"ballTypeB\", img : \"./img/fruit/modified_size/img_size_60.png\", radius : 17 },\n      { name : \"ballTypeC\", img : \"./img/fruit/modified_size/img_size_80.png\", radius : 23 },\n      { name : \"ballTypeD\", img : \"./img/fruit/modified_size/img_size_100.png\", radius : 25 },\n      { name : \"ballTypeE\", img : \"./img/fruit/modified_size/img_size_120.png\", radius : 32 },\n      { name : \"ballTypeF\", img : \"./img/fruit/modified_size/img_size_140.png\", radius : 39 },\n      { name : \"ballTypeG\", img : \"./img/fruit/modified_size/img_size_160.png\", radius : 41 },\n      { name : \"ballTypeH\", img : \"./img/fruit/modified_size/img_size_180.png\", radius : 55 },\n      { name : \"ballTypeI\", img : \"./img/fruit/modified_size/img_size_200.png\", radius : 66 },\n      { name : \"ballTypeJ\", img : \"./img/fruit/modified_size/img_size_220.png\", radius : 66 }\n    ]\n\n    this.canvas = document.getElementById(\"canvas\");\n    this.gameWrapper = document.getElementById(\"gameWrapper\");\n    this.canvas.style.zIndex = \"2\";\n    this.data = null;\n    this.imgTag = null;\n  }\n\n  // <=============================== ボールの生成 ===============================>\n  random(max) {\n    //ランダムにmaxの値までの整数を生成する\n    const fortune = [];\n    let num = 0;\n    for (let i = (max - 1); i > -1; i--) {\n      for (let j = 0;j < i;j++) {\n        fortune.push(num);\n      }\n      num += 1;\n    }\n    const random = fortune[Math.floor(Math.random() * fortune.length)];\n    return random\n  }\n\n  choice() {\n    //0~ボールの種類の数までの数をランダムに生成し、その数値のインデックスのボールを選択する\n    let choicedBall = this.imgs[this.random(4)];\n\n    // 最初の果物5個は紫、紫、赤、オレンジ、オレンジ、みかんで生成する\n    const firstChoicedBall = [0, 0, 1, 2, 2, 3];\n    const ballList = this.World.bodies.filter(body => body.label === \"Circle Body\");\n    if (ballList.length < 5) {\n      choicedBall = this.imgs[firstChoicedBall[ballList.length]];\n    }\n    \n    return choicedBall;\n  }\n\n  set() {\n    this.data = this.choice();\n    //選択したボールを描画する\n    this.imgTag = document.createElement(\"img\");\n    this.imgTag.setAttribute(\"src\", this.data.img);\n    this.imgTag.setAttribute(\"id\", \"ballImg\");\n    this.imgTag.style.left = ((this.canvas.width / this.forCanvasHighResolution) / 2) - (this.data.radius)  + \"px\";\n    this.imgTag.style.top = 30 + \"px\";\n    this.imgTag.style.position = \"absolute\";\n    this.gameWrapper.appendChild(this.imgTag);\n  }\n\n  position(x) {\n    //描画したボールをxに追従させる\n    this.imgTag.style.left = x - this.data.radius  + \"px\";\n    this.imgTag.style.top = this.y + \"px\";\n  }\n\n  hiddenImg() {\n    //描画しているボールを削除する\n    this.imgTag.remove();\n  }\n\n  create(x, y, data) {\n    //描画していたボールはimgだけのため、剛体のボールを生成する。（ゲームエンジンのライブラリ使っているため）\n    const ball = this.bodies.circle((x * this.forCanvasHighResolution) - (((innerWidth * this.forCanvasHighResolution) - (this.canvas.width)) / 2), y + data.radius * this.forCanvasHighResolution, data.radius * this.forCanvasHighResolution, {\n      //ボールを追加\n      density: 0.01, // 密度: 単位面積あたりの質量\n      frictionAir: 0.05, // 空気抵抗(空気摩擦)\n      restitution: 0.6, // 弾力性\n      friction: 0.05, // 本体の摩擦\n      render: {\n        //ボールのレンダリングの設定\n        sprite: {\n          //スプライトの設定\n          texture: data.img, //スプライトに使うテクスチャ画像を指定\n          xScale: 1 * this.forCanvasHighResolution,\n          yScale: 1 * this.forCanvasHighResolution,\n        },\n      },\n      timeScale: 1.25 * this.forCanvasHighResolution, //時間の倍率を設定(1で1倍速)\n    });\n    this.matterWorld.add(this.World, ball);\n    return ball;\n  }\n\n  // <=============================== ボールの消去 ===============================>\n  removeBall(ball) {\n    //剛体のボールの消去\n    this.matterWorld.remove(this.World, ball);\n\n    // ボールが削除される際に徐々に小さくしてアニメーションの唐突感をなくす\n    let radius = ball.circleRadius - (ball.circleRadius / 15);\n    const fadeOut = setInterval(() => {\n      const fadeOutBall = this.bodies.circle(ball.position.x, ball.position.y + radius, radius, {\n        //ボールを追加\n        density: 0.01, // 密度: 単位面積あたりの質量\n        frictionAir: 0.05, // 空気抵抗(空気摩擦)\n        restitution: 0.6, // 弾力性\n        friction: 0.05, // 本体の摩擦\n        render: {\n          //ボールのレンダリングの設定\n          sprite: {\n            //スプライトの設定\n            texture: ball.render.sprite.texture, //スプライトに使うテクスチャ画像を指定\n            xScale: radius / ball.circleRadius,\n            yScale: radius / ball.circleRadius,\n          },\n        },\n        timeScale: 1.5, //時間の倍率を設定(1で1倍速)\n      });\n      radius = radius - (ball.circleRadius / 15);\n      this.matterWorld.add(this.World, fadeOutBall);\n      setTimeout(() => {\n        this.matterWorld.remove(this.World, fadeOutBall);\n      }, 10)\n      if (radius <= 0) {\n        clearInterval(fadeOut);\n      };\n    }, 10);\n  }\n}\n","/*!\n * matter-js 0.17.1 by @liabru\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory();\n\telse\n\t\troot[\"Matter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 22);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n    Common._warnedOnce = {};\n    Common._decomp = null;\n    \n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result is in milliseconds and will use high-resolution timing if available.\n     * @method now\n     * @return {number} the current timestamp in milliseconds\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        if (Date.now) {\n            return Date.now();\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Uses `Common.warn` to log the given message one time only.\n     * @method warnOnce\n     * @param ...objs {} The objects to log.\n     */\n    Common.warnOnce = function() {\n        var message = Array.prototype.slice.call(arguments).join(' ');\n\n        if (!Common._warnedOnce[message]) {\n            Common.warn(message);\n            Common._warnedOnce[message] = true;\n        }\n    };\n\n    /**\n     * Shows a deprecated console warning when the function on the given object is called.\n     * The target function will be replaced with a new function that first shows the warning\n     * and then calls the original function.\n     * @method deprecated\n     * @param {object} obj The object or module\n     * @param {string} name The property name of the function on obj\n     * @param {string} warning The one-time message to show if the function is called\n     */\n    Common.deprecated = function(obj, prop, warning) {\n        obj[prop] = Common.chain(function() {\n            Common.warnOnce('🔅 deprecated 🔅', warning);\n        }, obj[prop]);\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Provide the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module to enable\n     * concave vertex decomposition support when using `Bodies.fromVertices` e.g. `Common.setDecomp(require('poly-decomp'))`.\n     * @method setDecomp\n     * @param {} decomp The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module.\n     */\n    Common.setDecomp = function(decomp) {\n        Common._decomp = decomp;\n    };\n\n    /**\n     * Returns the [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module provided through `Common.setDecomp`,\n     * otherwise returns the global `decomp` if set.\n     * @method getDecomp\n     * @return {} The [poly-decomp](https://github.com/schteppe/poly-decomp.js) library module if provided.\n     */\n    Common.getDecomp = function() {\n        // get user provided decomp if set\n        var decomp = Common._decomp;\n\n        try {\n            // otherwise from window global\n            if (!decomp && typeof window !== 'undefined') {\n                decomp = window.decomp;\n            }\n    \n            // otherwise from node global\n            if (!decomp && typeof global !== 'undefined') {\n                decomp = global.decomp;\n            }\n        } catch (e) {\n            // decomp not available\n            decomp = null;\n        }\n\n        return decomp;\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* A composite is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite` objects.\n*\n* They are a container that can represent complex objects made of multiple parts, even if they are not physically connected.\n* A composite could contain anything from a single body all the way up to a whole world.\n* \n* When making any changes to composites, use the included functions rather than changing their properties directly.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic single or multi-add function. Adds a single or an array of body(s), constraint(s) or composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {object|array} object A single or an array of body(s), constraint(s) or composite(s)\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {object|array} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(16);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(10);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(17);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Utility to create a compound body based on set(s) of vertices.\n     * \n     * _Note:_ To optionally enable automatic concave vertices decomposition the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package must be first installed and provided see `Common.setDecomp`, otherwise the convex hull of each vertex set will be used.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * The resulting offset may be found if needed by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that automatic conconcave decomposition results are not always optimal. \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param {array} vertexSets One or more arrays of vertex points e.g. `[[{ x: 0, y: 0 }...], ...]`.\n     * @param {object} [options] The body options.\n     * @param {bool} [flagInternal=false] Optionally marks internal edges with `isInternal`.\n     * @param {number} [removeCollinear=0.01] Threshold when simplifying vertices along the same edge.\n     * @param {number} [minimumArea=10] Threshold when removing small parts.\n     * @param {number} [removeDuplicatePoints=0.01] Threshold when simplifying nearby vertices.\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp = Common.getDecomp(),\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        // check decomp is as expected\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp) {\n                Common.warnOnce(\n                    'Bodies.fromVertices: Install the \\'poly-decomp\\' library and use Common.setDecomp or provide \\'decomp\\' as a global to decompose concave vertices.'\n                );\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(14);\nvar Pair = __webpack_require__(9);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(12);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    Render._goodFps = 30;\n    Render._goodDelta = 1000 / 60;\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            timing: {\n                historySize: 60,\n                delta: 0,\n                deltaHistory: [],\n                lastTime: 0,\n                lastTimestamp: 0,\n                lastElapsed: 0,\n                timestampElapsed: 0,\n                timestampElapsedHistory: [],\n                engineDeltaHistory: [],\n                engineElapsedHistory: [],\n                elapsedHistory: []\n            },\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showStats: false,\n                showPerformance: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            \n            _updateTiming(render, time);\n\n            Render.world(render, time);\n\n            if (render.options.showStats || render.options.showDebug) {\n                Render.stats(render, render.context, time);\n            }\n\n            if (render.options.showPerformance || render.options.showDebug) {\n                Render.performance(render, render.context, time);\n            }\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render, time) {\n        var startTime = Common.now(),\n            engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            timing = render.timing;\n\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase)\n            Render.grid(render, engine.grid, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n\n        // log the time elapsed computing this update\n        timing.lastElapsed = Common.now() - startTime;\n    };\n\n    /**\n     * Renders statistics about the engine and world useful for debugging.\n     * @private\n     * @method stats\n     * @param {render} render\n     * @param {RenderingContext} context\n     * @param {Number} time\n     */\n    Render.stats = function(render, context, time) {\n        var engine = render.engine,\n            world = engine.world,\n            bodies = Composite.allBodies(world),\n            parts = 0,\n            width = 55,\n            height = 44,\n            x = 0,\n            y = 0;\n        \n        // count parts\n        for (var i = 0; i < bodies.length; i += 1) {\n            parts += bodies[i].parts.length;\n        }\n\n        // sections\n        var sections = {\n            'Part': parts,\n            'Body': bodies.length,\n            'Cons': Composite.allConstraints(world).length,\n            'Comp': Composite.allComposites(world).length,\n            'Pair': engine.pairs.list.length\n        };\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(x, y, width * 5.5, height);\n\n        context.font = '12px Arial';\n        context.textBaseline = 'top';\n        context.textAlign = 'right';\n\n        // sections\n        for (var key in sections) {\n            var section = sections[key];\n            // label\n            context.fillStyle = '#aaa';\n            context.fillText(key, x + width, y + 8);\n\n            // value\n            context.fillStyle = '#eee';\n            context.fillText(section, x + width, y + 26);\n\n            x += width;\n        }\n    };\n\n    /**\n     * Renders engine and render performance information.\n     * @private\n     * @method performance\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.performance = function(render, context) {\n        var engine = render.engine,\n            timing = render.timing,\n            deltaHistory = timing.deltaHistory,\n            elapsedHistory = timing.elapsedHistory,\n            timestampElapsedHistory = timing.timestampElapsedHistory,\n            engineDeltaHistory = timing.engineDeltaHistory,\n            engineElapsedHistory = timing.engineElapsedHistory,\n            lastEngineDelta = engine.timing.lastDelta;\n        \n        var deltaMean = _mean(deltaHistory),\n            elapsedMean = _mean(elapsedHistory),\n            engineDeltaMean = _mean(engineDeltaHistory),\n            engineElapsedMean = _mean(engineElapsedHistory),\n            timestampElapsedMean = _mean(timestampElapsedHistory),\n            rateMean = (timestampElapsedMean / deltaMean) || 0,\n            fps = (1000 / deltaMean) || 0;\n\n        var graphHeight = 4,\n            gap = 12,\n            width = 60,\n            height = 34,\n            x = 10,\n            y = 69;\n\n        // background\n        context.fillStyle = '#0e0f19';\n        context.fillRect(0, 50, gap * 4 + width * 5 + 22, height);\n\n        // show FPS\n        Render.status(\n            context, x, y, width, graphHeight, deltaHistory.length, \n            Math.round(fps) + ' fps', \n            fps / Render._goodFps,\n            function(i) { return (deltaHistory[i] / deltaMean) - 1; }\n        );\n\n        // show engine delta\n        Render.status(\n            context, x + gap + width, y, width, graphHeight, engineDeltaHistory.length,\n            lastEngineDelta.toFixed(2) + ' dt', \n            Render._goodDelta / lastEngineDelta,\n            function(i) { return (engineDeltaHistory[i] / engineDeltaMean) - 1; }\n        );\n\n        // show engine update time\n        Render.status(\n            context, x + (gap + width) * 2, y, width, graphHeight, engineElapsedHistory.length,\n            engineElapsedMean.toFixed(2) + ' ut', \n            1 - (engineElapsedMean / Render._goodFps),\n            function(i) { return (engineElapsedHistory[i] / engineElapsedMean) - 1; }\n        );\n\n        // show render time\n        Render.status(\n            context, x + (gap + width) * 3, y, width, graphHeight, elapsedHistory.length,\n            elapsedMean.toFixed(2) + ' rt', \n            1 - (elapsedMean / Render._goodFps),\n            function(i) { return (elapsedHistory[i] / elapsedMean) - 1; }\n        );\n\n        // show effective speed\n        Render.status(\n            context, x + (gap + width) * 4, y, width, graphHeight, timestampElapsedHistory.length, \n            rateMean.toFixed(2) + ' x', \n            rateMean * rateMean * rateMean,\n            function(i) { return (((timestampElapsedHistory[i] / deltaHistory[i]) / rateMean) || 0) - 1; }\n        );\n    };\n\n    /**\n     * Renders a label, indicator and a chart.\n     * @private\n     * @method status\n     * @param {RenderingContext} context\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} count\n     * @param {string} label\n     * @param {string} indicator\n     * @param {function} plotY\n     */\n    Render.status = function(context, x, y, width, height, count, label, indicator, plotY) {\n        // background\n        context.strokeStyle = '#888';\n        context.fillStyle = '#444';\n        context.lineWidth = 1;\n        context.fillRect(x, y + 7, width, 1);\n\n        // chart\n        context.beginPath();\n        context.moveTo(x, y + 7 - height * Common.clamp(0.4 * plotY(0), -2, 2));\n        for (var i = 0; i < width; i += 1) {\n            context.lineTo(x + i, y + 7 - (i < count ? height * Common.clamp(0.4 * plotY(i), -2, 2) : 0));\n        }\n        context.stroke();\n\n        // indicator\n        context.fillStyle = 'hsl(' + Common.clamp(25 + 95 * indicator, 0, 120) + ',100%,60%)';\n        context.fillRect(x, y - 7, 4, 4);\n\n        // label\n        context.font = '12px Arial';\n        context.textBaseline = 'middle';\n        context.textAlign = 'right';\n        context.fillStyle = '#eee';\n        context.fillText(label, x + width, y - 5);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Updates render timing.\n     * @method _updateTiming\n     * @private\n     * @param {render} render\n     * @param {number} time\n     */\n    var _updateTiming = function(render, time) {\n        var engine = render.engine,\n            timing = render.timing,\n            historySize = timing.historySize,\n            timestamp = engine.timing.timestamp;\n\n        timing.delta = time - timing.lastTime || Render._goodDelta;\n        timing.lastTime = time;\n\n        timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;\n        timing.lastTimestamp = timestamp;\n\n        timing.deltaHistory.unshift(timing.delta);\n        timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);\n\n        timing.engineDeltaHistory.unshift(engine.timing.lastDelta);\n        timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);\n\n        timing.timestampElapsedHistory.unshift(timing.timestampElapsed);\n        timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);\n\n        timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);\n        timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);\n\n        timing.elapsedHistory.unshift(timing.lastElapsed);\n        timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);\n    };\n\n    /**\n     * Returns the mean value of the given numbers.\n     * @method _mean\n     * @private\n     * @param {Number[]} values\n     * @return {Number} the mean of given values\n     */\n    var _mean = function(values) {\n        var result = 0;\n        for (var i = 0; i < values.length; i += 1) {\n            result += values[i];\n        }\n        return (result / values.length) || 0;\n    };\n\n    /**\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n    /**\n     * The mouse to render if `render.options.showMousePosition` is enabled.\n     *\n     * @property mouse\n     * @type mouse\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     * See also the `options.pixelRatio` property to change render quality.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * The [pixel ratio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio) to use when rendering.\n     *\n     * @property options.pixelRatio\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is disabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.background\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A CSS background color string to use when `render.options.wireframes` is enabled.\n     * This may be also set to `'transparent'` or equivalent.\n     *\n     * @property options.wireframeBackground\n     * @type string\n     * @default '#14151f'\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable all debug information overlays together.  \n     * This includes and has priority over the values of:\n     *\n     * - `render.options.showStats`\n     * - `render.options.showPerformance`\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the engine stats info overlay.  \n     * From left to right, the values shown are:\n     *\n     * - body parts total\n     * - body total\n     * - constraints total\n     * - composites total\n     * - collision pairs total\n     *\n     * @property options.showStats\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable performance charts.  \n     * From left to right, the values shown are:\n     *\n     * - average render frequency (e.g. 60 fps)\n     * - exact engine delta time used for last update (e.g. 16.66ms)\n     * - average engine execution duration (e.g. 5.00ms)\n     * - average render execution duration (e.g. 0.40ms)\n     * - average effective play speed (e.g. '1.00x' is 'real-time')\n     *\n     * Each value is recorded over a fixed sample of past frames (60 frames).\n     *\n     * A chart shown below each value indicates the variance from the average over the sample.\n     * The more stable or fixed the value is the flatter the chart will appear.\n     *\n     * @property options.showPerformance\n     * @type boolean\n     * @default false\n     */\n    \n    /**\n     * A flag to enable or disable rendering entirely.\n     *\n     * @property options.enabled\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to toggle wireframe rendering otherwise solid fill rendering is used.\n     *\n     * @property options.wireframes\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable sleeping bodies indicators.\n     *\n     * @property options.showSleeping\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A flag to enable or disable the debug information overlay.\n     *\n     * @property options.showDebug\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision broadphase debug overlay.\n     *\n     * @property options.showBroadphase\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body bounds debug overlay.\n     *\n     * @property options.showBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body velocity debug overlay.\n     *\n     * @property options.showVelocity\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body collisions debug overlay.\n     *\n     * @property options.showCollisions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the collision resolver separations debug overlay.\n     *\n     * @property options.showSeparations\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body axes debug overlay.\n     *\n     * @property options.showAxes\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body positions debug overlay.\n     *\n     * @property options.showPositions\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body angle debug overlay.\n     *\n     * @property options.showAngleIndicator\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body and part ids debug overlay.\n     *\n     * @property options.showIds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body vertex numbers debug overlay.\n     *\n     * @property options.showVertexNumbers\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body convex hulls debug overlay.\n     *\n     * @property options.showConvexHulls\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the body internal edges debug overlay.\n     *\n     * @property options.showInternalEdges\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag to enable or disable the mouse position debug overlay.\n     *\n     * @property options.showMousePosition\n     * @type boolean\n     * @default false\n     */\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(19);\nvar Detector = __webpack_require__(13);\nvar Pairs = __webpack_require__(20);\nvar Grid = __webpack_require__(21);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(options) {\n        options = options || {};\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            grid: null,\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            timing: {\n                timestamp: 0,\n                timeScale: 1,\n                lastDelta: 0,\n                lastElapsed: 0\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        engine.world = options.world || Composite.create({ label: 'World' });\n        engine.grid = Grid.create(options.grid || options.broadphase);\n        engine.pairs = Pairs.create();\n\n        // temporary back compatibility\n        engine.world.gravity = engine.gravity;\n        engine.broadphase = engine.grid;\n        engine.metrics = {};\n        \n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        var startTime = Common.now();\n\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            grid = engine.grid,\n            gridPairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n        timing.lastDelta = delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, engine.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n\n        // if world is dirty, we must flush the whole grid\n        if (world.isModified)\n            Grid.clear(grid);\n\n        // update the grid buckets based on current bodies\n        Grid.update(grid, allBodies, engine, world.isModified);\n        gridPairs = grid.pairsList;\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = Detector.collisions(gridPairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        // log the time elapsed computing this update\n        engine.timing.lastElapsed = Common.now() - startTime;\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world,\n            bodies = Composite.allBodies(world);\n\n        Pairs.clear(engine.pairs);\n        Grid.clear(engine.grid);\n        Grid.update(engine.grid, bodies, engine, true);\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * A deprecated alias for `Runner.run`, use `Matter.Runner.run(engine)` instead and see `Matter.Runner` for more information.\n     * @deprecated use Matter.Runner.run(engine) instead\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the total execution time elapsed during the last `Engine.update` in milliseconds.\n     * It is updated by timing from the start of the last `Engine.update` call until it ends.\n     *\n     * This value will also include the total execution time of all event handlers directly or indirectly triggered by the engine update.\n     *\n     * @property timing.lastElapsed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that represents the `delta` value used in the last engine update.\n     *\n     * @property timing.lastDelta\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Matter.Grid` instance.\n     *\n     * @property grid\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * Replaced by and now alias for `engine.grid`.\n     *\n     * @deprecated use `engine.grid`\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * The root `Matter.Composite` instance that will contain all bodies, constraints and other composites to be simulated by this engine.\n     *\n     * @property world\n     * @type composite\n     * @default a Matter.Composite instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * The gravity to apply on all bodies in `engine.world`.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                Vector.add(bodyA.positionImpulse, \n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                    pair.confirmedActive = true;\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && !pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // temporary back compatibility bounds check\n            if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(23);\n\nMatter.Axes = __webpack_require__(10);\nMatter.Bodies = __webpack_require__(11);\nMatter.Body = __webpack_require__(6);\nMatter.Bounds = __webpack_require__(1);\nMatter.Common = __webpack_require__(0);\nMatter.Composite = __webpack_require__(5);\nMatter.Composites = __webpack_require__(24);\nMatter.Constraint = __webpack_require__(8);\nMatter.Contact = __webpack_require__(17);\nMatter.Detector = __webpack_require__(13);\nMatter.Engine = __webpack_require__(18);\nMatter.Events = __webpack_require__(4);\nMatter.Grid = __webpack_require__(21);\nMatter.Mouse = __webpack_require__(12);\nMatter.MouseConstraint = __webpack_require__(25);\nMatter.Pair = __webpack_require__(9);\nMatter.Pairs = __webpack_require__(20);\nMatter.Plugin = __webpack_require__(15);\nMatter.Query = __webpack_require__(26);\nMatter.Render = __webpack_require__(16);\nMatter.Resolver = __webpack_require__(19);\nMatter.Runner = __webpack_require__(27);\nMatter.SAT = __webpack_require__(14);\nMatter.Sleeping = __webpack_require__(7);\nMatter.Svg = __webpack_require__(28);\nMatter.Vector = __webpack_require__(2);\nMatter.Vertices = __webpack_require__(3);\nMatter.World = __webpack_require__(29);\n\n// temporary back compatibility\nMatter.Engine.run = Matter.Runner.run;\nMatter.Common.deprecated(Matter.Engine, 'run', 'Engine.run ➤ use Matter.Runner.run(engine) instead');\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = __webpack_require__(15);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version =  true ? \"0.17.1\" : undefined;\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(11);\nvar deprecated = Common.deprecated;\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * This has now moved to the [newtonsCradle example](https://github.com/liabru/matter-js/blob/master/examples/newtonsCradle.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to newtonsCradle example\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    deprecated(Composites, 'newtonsCradle', 'Composites.newtonsCradle ➤ moved to newtonsCradle example');\n    \n    /**\n     * This has now moved to the [car example](https://github.com/liabru/matter-js/blob/master/examples/car.js), follow that instead as this function is deprecated here.\n     * @deprecated moved to car example\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    deprecated(Composites, 'car', 'Composites.car ➤ moved to car example');\n\n    /**\n     * This has now moved to the [softBody example](https://github.com/liabru/matter-js/blob/master/examples/softBody.js)\n     * and the [cloth example](https://github.com/liabru/matter-js/blob/master/examples/cloth.js), follow those instead as this function is deprecated here.\n     * @deprecated moved to softBody and cloth examples\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n    deprecated(Composites, 'softBody', 'Composites.softBody ➤ moved to softBody and cloth examples');\n})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(12);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(13);\nvar Constraint = __webpack_require__(8);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar SAT = __webpack_require__(14);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(11);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(18);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        Events.trigger(runner, 'afterTick', event);\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* This module has now been replaced by `Matter.Composite`.\n*\n* All usage should be migrated to the equivalent functions found on `Matter.Composite`.\n* For example `World.add(world, body)` now becomes `Composite.add(world, body)`.\n*\n* The property `world.gravity` has been moved to `engine.gravity`.\n*\n* For back-compatibility purposes this module will remain as a direct alias to `Matter.Composite` in the short term during migration.\n* Eventually this alias module will be marked as deprecated and then later removed in a future release.\n*\n* @class World\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * See above, aliases for back compatibility only\n     */\n    World.create = Composite.create;\n    World.add = Composite.add;\n    World.remove = Composite.remove;\n    World.clear = Composite.clear;\n    World.addComposite = Composite.addComposite;\n    World.addBody = Composite.addBody;\n    World.addConstraint = Composite.addConstraint;\n\n})();\n\n\n/***/ })\n/******/ ]);\n});\n","'use strict';\nclass RigidBody {\n  // 流石に下記で作成するWallクラスとFloorクラスの差異がほとんどないから継承の勉強、実践もかねてRigidBodyを継承させることにした。\n  constructor(bodies, composite, engineWorld) {\n    this.canvas = document.getElementById(\"canvas\");\n    this.width = innerWidth;\n    this.height = innerHeight;\n    // Matter.js モジュール 初期設定\n    this.Bodies = bodies; // 物理シミュレーション上で剛体を設定する\n    this.Composite = composite; // 物理シミュレーションを構成するオブジェクトを管理する\n    this.world = engineWorld; // 物理シミュレーションを行う環境を用意する\n  }\n\n  // <=============================== ステージ作成 ===============================>\n  create(positionX, positionY, rectWidth, rectHeight, color) {\n    // 剛体の四角を作成する\n    this.Composite.add(this.world, [ // 物理シミュレーションにオブジェクトを加える\n      this.Bodies.rectangle(positionX, positionY, rectWidth, rectHeight, { // レクタングルを加える\n        isStatic: true, // 固定する\n        render: {\n          // fillStyle: \"brown\", // 塗りつぶす色: CSSの記述法で指定\n          fillStyle: color, // 塗りつぶす色: CSSの記述法で指定\n          strokeStyle: \"rgba(0, 0, 0, 0)\", // 線の色: CSSの記述法で指定\n          lineWidth: 0,\n        },\n      }),\n    ]);\n  }\n}\n\nexport class Wall extends RigidBody {\n  // <=============================== 壁作成 ===============================>\n  rightWall() {\n    this.create(-10, this.canvas.height / 2, 20, this.canvas.height);\n  }\n\n  leftWall() {\n    this.create(this.canvas.width + 10, this.canvas.height / 2, 20, this.canvas.height);\n  }\n}\n\n\nexport class Floor extends RigidBody {\n  // <=============================== 床作成 ===============================>\n  floor() {\n    const brown = \"brown\";\n    const yellow = \"darkgoldenrod\";\n    this.create(this.canvas.width / 2, this.canvas.height-10, this.canvas.width, 90, yellow);\n    this.create(this.canvas.width / 2, this.canvas.height-10, this.canvas.width, 70, brown);\n  }\n}","'use strict';\nexport class Screen {\n  constructor(forCanvashighResolution) {\n    this.canvas = document.getElementById(\"canvas\");\n    this.removingBallView = document.getElementById(\"removingBallView\");\n    this.endView = document.getElementById(\"endView\");\n    this.cautionBar = document.getElementById(\"cautionBar\");\n    this.score = document.getElementById(\"score\");\n    this.sumScore = document.getElementById(\"ending-score-text\");\n    this.width = innerWidth;\n    this.height = innerHeight;\n    this.tags = [];\n    this.forCanvashighResolution = forCanvashighResolution;\n  }\n\n  showElemnet(ele) {\n    ele.classList.add(\"is-show\");\n    ele.classList.remove(\"is-hidden\");\n  }\n  hiddenElement(ele) {\n    ele.classList.add(\"is-hidden\");\n    ele.classList.remove(\"is-show\");\n  }\n  pointerEventsOn(ele) {\n    ele.classList.add(\"pointer-events-on\");\n    ele.classList.remove(\"pointer-events-off\");\n  }\n  pointerEventsOff(ele) {\n    ele.classList.remove(\"pointer-events-on\");\n    ele.classList.add(\"pointer-events-off\");\n  }\n\n  // ゲーム終了画面\n  showRemovingBallView() {\n    this.showElemnet(this.removingBallView); // ゲーム終了時にボールが順々に削除されていく際に、薄い黒いシートを描画して終わり感を演出する\n    this.pointerEventsOff(this.canvas); // キャンバスのクリックを禁止し、ボールの生成をここで阻害する\n  }\n\n  showGameOverView() {\n    this.showElemnet(this.endView); // ゲーム終了時の得点とコンテニュー画面を表示する\n    this.hiddenElement(this.removingBallView);\n  }\n\n  // タイトル画面\n  init() {\n    this.pointerEventsOn(this.canvas);\n    this.hiddenElement(this.removingBallView); // ゲーム終了時の画面を非表示\n    this.hiddenElement(this.endView); // ゲーム終了時の画面を非表示\n    this.hiddenBar(); // 警告の非表示\n    this.score.innerText = 0; // 得点の初期化\n\n  }\n\n  // プレイ中の画面\n  showBar(top) {\n    this.showElemnet(this.cautionBar); // 警告のバーを表示する\n    this.cautionBar.style.top = top + \"px\";\n  }\n\n  hiddenBar() {\n    this.hiddenElement(this.cautionBar); // 警告のバーを非表示する\n  }\n\n  showUnionEffect(x, y, size, type) {\n    // ボールが削除された際の飛沫を画像として格納する\n    const imgs = [\n      { name : \"ballTypeA\", 0 : \"../img/fruit/purple/img_p1.png\", 1 : \"../img/fruit/purple/img_p2.png\", 2 : \"../img/fruit/purple/img_p3.png\", 3 : \"../img/fruit/purple/img_p4.png\", 4 : \"../img/fruit/purple/img_p5.png\", 5 : \"../img/fruit/purple/img_p6.png\" },\n      { name : \"ballTypeB\", 0 : \"../img/fruit/red/img_r1.png\", 1 : \"../img/fruit/red/img_r2.png\", 2 : \"../img/fruit/red/img_r3.png\", 3 : \"../img/fruit/red/img_r4.png\", 4 : \"../img/fruit/red/img_r5.png\", 5 : \"../img/fruit/red/img_r6.png\" },\n      { name : \"ballTypeC\", 0 : \"../img/fruit/orange/img_o1.png\", 1 : \"../img/fruit/orange/img_o2.png\", 2 : \"../img/fruit/orange/img_o3.png\", 3 : \"../img/fruit/orange/img_o4.png\", 4 : \"../img/fruit/orange/img_o5.png\", 5 : \"../img/fruit/orange/img_o6.png\" },\n      { name : \"ballTypeD\", 0 : \"../img/fruit/yellow/img_y1.png\", 1 : \"../img/fruit/yellow/img_y2.png\", 2 : \"../img/fruit/yellow/img_y3.png\", 3 : \"../img/fruit/yellow/img_y4.png\", 4 : \"../img/fruit/yellow/img_y5.png\", 5 : \"../img/fruit/yellow/img_y6.png\" },\n      { name : \"ballTypeE\", 0 : \"../img/fruit/green/img_g1.png\", 1 : \"../img/fruit/green/img_g2.png\", 2 : \"../img/fruit/green/img_g3.png\", 3 : \"../img/fruit/green/img_g4.png\", 4 : \"../img/fruit/green/img_g5.png\", 5 : \"../img/fruit/green/img_g6.png\" },\n      { name : \"ballTypeF\", 0 : \"../img/fruit/red/img_r1.png\", 1 : \"../img/fruit/red/img_r2.png\", 2 : \"../img/fruit/red/img_r3.png\", 3 : \"../img/fruit/red/img_r4.png\", 4 : \"../img/fruit/red/img_r5.png\", 5 : \"../img/fruit/red/img_r6.png\" },\n      { name : \"ballTypeG\", 0 : \"../img/fruit/orange/img_o1.png\", 1 : \"../img/fruit/orange/img_o2.png\", 2 : \"../img/fruit/orange/img_o3.png\", 3 : \"../img/fruit/orange/img_o4.png\", 4 : \"../img/fruit/orange/img_o5.png\", 5 : \"../img/fruit/orange/img_o6.png\" },\n      { name : \"ballTypeH\", 0 : \"../img/fruit/yellow/img_y1.png\", 1 : \"../img/fruit/yellow/img_y2.png\", 2 : \"../img/fruit/yellow/img_y3.png\", 3 : \"../img/fruit/yellow/img_y4.png\", 4 : \"../img/fruit/yellow/img_y5.png\", 5 : \"../img/fruit/yellow/img_y6.png\" },\n      { name : \"ballTypeI\", 0 : \"../img/fruit/white/img_w1.png\", 1 : \"../img/fruit/white/img_w2.png\", 2 : \"../img/fruit/white/img_w3.png\", 3 : \"../img/fruit/white/img_w4.png\", 4 : \"../img/fruit/white/img_w5.png\", 5 : \"../img/fruit/white/img_w6.png\" },\n      { name : \"ballTypeJ\", 0 : \"../img/fruit/red/img_r1.png\", 1 : \"../img/fruit/red/img_r2.png\", 2 : \"../img/fruit/red/img_r3.png\", 3 : \"../img/fruit/red/img_r4.png\", 4 : \"../img/fruit/red/img_r5.png\", 5 : \"../img/fruit/red/img_r6.png\" },\n    ];\n    // 画像として格納した画像を描画する\n    for (let i = 0; i < imgs.length; i++) {\n      if (imgs[i].name === type) {\n        for (let j = 0; j < 6; j++) {\n          const imgTag = document.createElement(\"img\");\n          imgTag.setAttribute(\"class\", \"union-effect\" + j);\n          imgTag.setAttribute(\"src\", imgs[i][j]);\n          imgTag.width = size;\n          imgTag.height = size;\n          imgTag.style.left = x - (imgTag.width / 2) + ((innerWidth - (this.canvas.width / this.forCanvashighResolution)) / 2) + \"px\" ;\n          imgTag.style.top = y - (imgTag.height / 2) + ((innerHeight - (this.canvas.height / this.forCanvashighResolution)) / 2) + \"px\" ;\n          document.body.appendChild(imgTag);\n          this.tags.push(imgTag);\n        }\n      }\n    }\n    const screen = this;\n    const oldTime = Date.now();\n    let time = null;\n    let diff = null;\n\n    // 飛沫のimgを描画時間に合わせて削除する\n    const update = () => {\n      time = Date.now();\n      diff = time - oldTime;\n      const id = requestAnimationFrame(update);\n      if (diff > 1000) {\n        cancelAnimationFrame(id);\n        screen.hiddenUnionEffect();\n      }\n    };\n    requestAnimationFrame(update);\n  }\n\n  hiddenUnionEffect() {\n    // 飛沫のimgを削除する\n    if (this.tags.length !== null) {\n      for (let i = 0; i < this.tags.length; i++) {\n        this.tags[i].remove();\n      }\n      this.tags = [];\n    }\n  }\n\n // スコアを描画\n  addScore(point) {\n    this.score.innerText = point; // 得点のテキスト挿入\n    this.sumScore.innerText = point; // エンディング画面での得点のテキスト挿入\n  }\n}","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\nimport \"./style.scss\"\nconst Matter = require('./matter.js')\nimport { Wall } from \"./rigid-body\";\nimport { Floor } from \"./rigid-body\";\nimport { Ball } from \"./ball\";\nimport { Screen } from \"./screen\";\nimport { AudioPlayer } from \"./audio-player\";\n\nclass Game {\n  constructor() {\n    this.engine = Matter.Engine; // 物理シュミレーションおよびレンダリングを管理するコントローラーとなるメソッド\n    this.runner = Matter.Runner;\n    this.render = Matter.Render;\n    this.bodies = Matter.Bodies; // 一般的な剛体モデルを作成するメソッドを含む\n    this.matterWorld = Matter.World; // 物理演算領域の作成・操作するメソッドを含む\n    this.composite = Matter.Composite; // 物理演算領域の作成・操作するメソッドを含む\n    this.events = Matter.Events; // 物理演算領域の作成・操作するメソッドを含む\n    this.Engine = this.engine.create(); // 物理シミュレーションの演算を担う機能を用意する\n    this.World = this.Engine.world; // 物理シミュレーションを行う環境を用意する\n\n    this.canvas = document.getElementById(\"canvas\");\n    this.startWrapper = document.getElementById(\"start-text-wrapper\");\n    this.forCanvasHighResolution = 3;\n    this.start = document.getElementById(\"start-text\");\n    this.gameWrapper = document.getElementById(\"gameWrapper\");\n    this.endingTextBtn = document.getElementById(\"ending-text-wrapper\");\n    this.endingImgBtn = document.getElementById(\"ending-img\");\n\n    // ゲームの設定\n    this.gameOverHeight = null; // 終了条件高さ\n    this.scorePoint = 0; // 得点\n    this.setBall = null;\n    this.positionYList = [];\n\n    // インスタンス生成\n    this.wall = new Wall(this.bodies, this.composite, this.World);\n    this.floor = new Floor(this.bodies, this.composite, this.World);\n    this.ball = new Ball(this.bodies, this.matterWorld, this.World, this.gameOverHeight, this.forCanvasHighResolution);\n    this.screen = new Screen(this.forCanvasHighResolution);\n    this.AudioPlayer = null;\n    this.collisionBool = true;\n    this.isCollisionAnimation = false;\n\n    this.soundOn = true;\n  }\n\n  // 物理エンジンのレンダリング\n  rendering() {\n    // 物理シミュレーションを噛ませたキャンバスの設定を行う\n    const render = this.render.create({\n      canvas: this.canvas,\n      element: document.body,\n      engine: this.Engine,\n      options: {\n        wireframes: false,\n        width: 320 * this.forCanvasHighResolution,\n        height: 550 * this.forCanvasHighResolution,\n        showAngleIndicator: false,\n        background: \"rgba(0, 0, 0 ,0)\",\n      },\n    });\n\n    this.gameOverHeight = (this.canvas.height / this.forCanvasHighResolution) * 0.1; // 終了条件高さ\n\n    return render\n  }\n\n  // 初期化\n  init() {\n    // 初期化するべき対象\n    const ballList = this.World.bodies.filter(ball => ball.label === \"Circle Body\"); // 全ボールの取得\n    ballList.length = 0; // 物理シミュレーションを噛ませているボールのリスト\n    this.gameWrapper.appendChild(this.canvas);\n    this.screen.init(); // 描画画面の初期化 // 得点の初期化\n    this.setBall = this.ball.set(this.data); // 最初のボールの生成\n  }\n  // <=============================== 衝突検知 ===============================>\n  collision() {\n    const game = this;\n    // ゲームエンジンでのコリジョン判定。ゲーム内に剛体として生成したオブジェクトを対象として衝突判定をしてくれている。今回は床、壁、ボール。\n    game.events.on(game.Engine, \"collisionStart\", function(event) {\n      if (game.collisionBool) {\n        for (let i = 0; i < event.pairs.length; i++) {\n          const pairs = event.pairs; // 衝突している二つの物体\n          const ballA = pairs[i].bodyA; // 衝突している二つの物体のうちの片方\n          const ballB = pairs[i].bodyB; // 衝突している二つの物体のうちの片方\n          if (game.soundOn) {  // 衝突はボールが重なるとずっと起こってしまうので落としたボールと下にあるボールがぶつかった初回のみサウンドをオンにする\n            if (ballA.id === game.World.bodies[game.World.bodies.length - 1].id || ballB.id === game.World.bodies[game.World.bodies.length - 1].id) {\n              game.AudioPlayer.playSound(\"bound\");\n              game.soundOn = false;\n            }\n          }\n          if (ballA.circleRadius != 0 && ballB.circleRadius != 0) {\n            game.union(ballA, ballB); // 同種のボールの合体\n          }\n          game.ballHeight = game.maxHeight(); // 全ボールからもっともy座標の位置が高いものを取得\n        }\n      };\n    });\n  }\n\n  colliding() { // collisionは衝突が起こった瞬間に発火するが、こちらは衝突中時に発火する衝突判定、内容はcollisionと同じ。\n    const game = this;\n    // ゲームエンジンでのコリジョン判定。ゲーム内に剛体として生成したオブジェクトを対象として衝突判定をしてくれている。今回は床、壁、ボール。\n    game.events.on(game.Engine, \"collisionActive\", function(event) {\n      if (game.collisionBool) {\n        for (let i = 0; i < event.pairs.length; i++) {\n          const pairs = event.pairs;\n          const ballA = pairs[i].bodyA;\n          const ballB = pairs[i].bodyB;\n          if (game.soundOn) {\n            if (ballA.id === game.World.bodies[game.World.bodies.length - 1].id || ballB.id === game.World.bodies[game.World.bodies.length - 1].id) {\n              game.AudioPlayer.playSound(\"bound\");\n              game.soundOn = false;\n            }\n          }\n          if (ballA.circleRadius != 0 && ballB.circleRadius != 0) {\n            game.union(ballA, ballB);// 同種のボールの合体\n          }\n          game.ballHeight = game.maxHeight();// 全ボールからもっともy座標の位置が高いものを取得\n        }\n      };\n    });\n  }\n\n  // <=============================== ボール合体 ===============================>\n  union(ballA, ballB) { // 同種のボールを合体させる\n    const game = this;\n\n    if (game.isCollisionAnimation) { // ボールの合体に少しのラグを出すことで消滅が連鎖しているような表現を行うために一度、合体が起こったらブレイクさせる\n      return;\n    }\n\n    const balls = [ballA, ballB];\n    let x = ballA.position.x / this.forCanvasHighResolution; // ボールのx座標を実際に描画されているサイズに合わせる\n    let y = ballA.position.y; // ボールのy座標は実際に描画されるサイズとキャンバスのサイズ両方ほしいのでそのままにしておく\n\n    if (ballA.circleRadius === ballB.circleRadius) { // 衝突したボールのサイズが同一だった時\n\n      for (let j = 0; j < game.ball.imgs.length; j++) {\n        if (ballA.circleRadius === (game.ball.imgs[j].radius * this.forCanvasHighResolution) && (j + 1) < game.ball.imgs.length) {\n          y -= game.ball.imgs[j + 1].radius;\n          // ボールが消失する際の飛沫のエフェクトの描画\n          game.screen.showUnionEffect(x, y / this.forCanvasHighResolution, game.ball.imgs[j+1].radius * 2, game.ball.imgs[j].name);\n          // ボールが消失する際の音の再生\n          game.AudioPlayer.playSound(\"union\");\n          // 衝突して合体したボールの半径より一つ大きいボールを生成\n          game.ball.create(x + ((innerWidth - (this.canvas.width / this.forCanvasHighResolution)) / 2), y, game.ball.imgs[j + 1]);\n          // 差し替える\n          game.removeBalls(balls);\n          // 衝突して合体したボールの半径をとりあえず得点としている\n          game.scorePoint = game.scorePoint + ballA.circleRadius;\n          // スコアに加算する\n          game.screen.addScore(game.scorePoint);\n          // 繰り返しをここで一度ブレイクする\n          game.isCollisionAnimation = true;\n          setTimeout (() => {\n            game.isCollisionAnimation = false;\n          } ,80);\n        } else if (j === game.ball.imgs.length) { // すいかが一番大きいボールで合体イベントが起こらない\n\n          // game.screen.showUnionEffect(x, y, game.ball.imgs[j+1].radius * 2, game.ball.imgs[j].name);\n          // game.AudioPlayer.playSound(\"union\");\n          // game.removeBalls(balls); // 差し替える\n          // game.scorePoint = game.scorePoint + ballA.circleRadius; // 衝突して合体したボールの半径をとりあえず得点としている\n          // game.screen.addScore(game.scorePoint);\n          game.isCollisionAnimation = true;\n        }\n      }\n    }\n\n  };\n\n  // <=============================== 次弾を装填または装填しない ===============================>\n  generate() {\n    const ball = this.ball;\n    const game = this;\n\n    document.addEventListener(\"mousemove\", (event) => { // マウスのムーブに落下を控えている果物を追従させる\n      let x = event.pageX;\n      const r = ball.data.radius;\n      if ((((innerWidth - (this.canvas.width / this.forCanvasHighResolution)) / 2) + r) > x) { // ステージ内なら自由に動かすことができる\n        x = r;\n      } else if ((((innerWidth + (this.canvas.width / this.forCanvasHighResolution)) / 2) - r) < x) { // 端にいった時にステージ内に留める\n        x = (((innerWidth + (this.canvas.width / this.forCanvasHighResolution)) / 2) - r) - ((innerWidth - (this.canvas.width / this.forCanvasHighResolution)) / 2);\n      } else { // 端にいった時にステージ内に留める\n        x = event.pageX - ((innerWidth - (this.canvas.width / this.forCanvasHighResolution)) / 2);\n      }\n      ball.position(x);// 装填したボールをマウスに追従させる\n    });\n\n    game.canvas.addEventListener(\"click\", (event) => { // 落としたい位置をクリックしたら\n      const x = event.pageX;\n      game.soundOn = true;\n      ball.create(x, 30 * this.forCanvasHighResolution, game.ball.data); // 物理シミュレーション上に果物を生成する\n      ball.hiddenImg(); // imgで自由に動かせるように描画していた果物を削除する\n      // ボールを落としてから次のボールが生成されるまで、ボールを落下させないようにする。\n      this.screen.pointerEventsOff(game.canvas); // クリックをキャンセルし、連続で果物をだせないようにする\n\n      // タイマーでクリック可能にしつつ、次弾装填\n      const oldTime = Date.now();\n      let time = null;\n      let diff = null;\n      const update = () => {\n        time = Date.now();\n        diff = time - oldTime;\n        const id = requestAnimationFrame(update);\n        if (diff > 2000) { // 2秒後にクリックを許可する\n          if (game.ballHeight < game.gameOverHeight) { // ある高さを積み上げたボールが超えるとゲーム終了\n            this.positionYList = [];\n            const ballList = this.World.bodies.filter(ball => ball.label === \"Circle Body\"); // 全ボールの取得\n            game.screen.showBar(game.gameOverHeight);\n            console.log(ballList);\n            game.collisionBool = false;\n            game.screen.showRemovingBallView();\n            game.removeGameOverBalls(ballList);\n          }\n          else if (game.ballHeight < (game.gameOverHeight + 100)) { // ステージがいっぱいになり、終了条件に近づいていることを警告する\n            this.setBall = ball.set();\n            game.screen.showBar(game.gameOverHeight);\n            this.screen.pointerEventsOn(game.canvas);\n          }\n          else { // 何事もなくプレイング\n            this.setBall = ball.set();\n            game.screen.hiddenBar();\n            this.screen.pointerEventsOn(game.canvas);\n          }\n          cancelAnimationFrame(id);\n        }\n      };\n      requestAnimationFrame(update);\n    });\n  }\n\n  // <=============================== ステージ上のボール全削除 ===============================>\n  removeBalls(ballList) {\n    for (let i = 0; i < ballList.length; i++)\n      this.ball.removeBall(ballList[i]);\n  }\n\n  removeGameOverBalls(ballList) { // ゲームオーバー時に果物を時間差を持って順番に削除する\n    let startTime = Date.now();\n    let eleNum = 0;\n    const game = this;\n    if (!game.collisionBool) {\n      const removeAllBalls = () => {\n        const currentTime = Date.now();\n        const id = requestAnimationFrame(removeAllBalls);\n\n        if (currentTime - startTime > 250 && ballList[eleNum]) {\n          for (let i = 0; i < game.ball.imgs.length; i++) {\n            if ((ballList[eleNum].circleRadius / this.forCanvasHighResolution) === game.ball.imgs[i].radius) {\n              game.AudioPlayer.playSound(\"union\");\n              game.screen.showUnionEffect(ballList[eleNum].position.x / this.forCanvasHighResolution, ballList[eleNum].position.y / this.forCanvasHighResolution, (game.ball.imgs[i].radius * 2), game.ball.imgs[i].name);\n              this.ball.removeBall(ballList[eleNum]);\n            }\n          }\n          eleNum += 1;\n          startTime = Date.now();\n        }\n        else if (!ballList[eleNum]) {\n          game.collisionBool = true;\n          eleNum = 0;\n          game.screen.showGameOverView();\n          cancelAnimationFrame(id);\n        }\n\n      };\n      requestAnimationFrame(removeAllBalls);\n    }\n  }\n  // <=============================== ボールの最高到達高さを算出 ===============================>\n  // MaxHeight = ball.position.y + ball.radius\n  // まず一番大きいボールを探す。\n  // そのためにボールリストを作成\n  // ボールリストを今度はposition.yで降べきに並び替え\n  // indexの0を取得\n  maxHeight() {\n    const ballList = this.World.bodies.filter(ball => ball.label === \"Circle Body\"); // 剛体を管理するリストからボールのみを取り出して全ボールのリストを作成\n    this.positionYList = [];\n    for (let i = 0;i < ballList.length; i++) {\n      this.positionYList.push(ballList[i].position.y); // 全ボールからy座標を取得してそのリストを作成\n    }\n    const min = Math.min.apply(null, this.positionYList); // もっとも画面上部のy座標を取得\n    const index = this.positionYList.indexOf(min); // もっとも画面上部にあるボールのインデックスを取得\n    let height = innerHeight;\n    if (ballList.length > 1) {\n      if (ballList[index]) {\n        height =(ballList[index].position.y / this.forCanvasHighResolution) - ballList[index].circleRadius; // 座標リストのインデックスからどのボールが一番上かを特定して、ボールの最上部の高さを算出する\n      }\n    }\n\n    return height;\n  }\n\n\n  run() { // ゲーム開始\n    this.start.addEventListener(\"click\", () => { // スタートボタンを押すと下記発火\n      this.start.style.display = \"none\"; // スタートボタンの非表示\n      this.startWrapper.style.display = \"none\";\n      this.AudioPlayer = new AudioPlayer(); // オーディオが非同期だと許可がおりないのでここで生成する\n      this.AudioPlayer.playFirstSound(\"union\");\n    });\n    this.render.run(this.rendering());\n    this.runner.run(this.Engine);\n    this.wall.rightWall();\n    this.wall.leftWall();\n    this.floor.floor();\n    this.init();\n    this.generate();\n    this.collision();\n    this.colliding();\n    this.endingTextBtn.addEventListener(\"click\", () => {\n      this.init();\n    })\n    this.endingImgBtn.addEventListener(\"click\", () => {\n      this.init();\n    })\n  }\n}\n\nconst touchEventController = () => {\n  document.documentElement.addEventListener('touchstart', function (e) {\n    // Disable Pinch in/out zoom\n    if (e.touches.length >= 2) { e.preventDefault(); }\n  }, {passive: false});\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const game = new Game();\n  touchEventController();\n  game.run();\n});"],"names":["AudioPlayer","constructor","bound","Audio","union","data","audioContext","AudioContext","window","webkitAudioContext","playFirstSound","name","dir","request","i","length","src","audioPlayer","XMLHttpRequest","open","responseType","onload","completeOnLoad","send","decodeAudioData","response","buf","buffer","connect","destination","start","createBufferSource","playSound","fetch","method","then","arrayBuffer","res","playBgm","loop","Ball","bodies","matterWorld","World","gameOverHeight","forCanvasHighResolution","image","Image","imgs","img","radius","canvas","document","getElementById","gameWrapper","style","zIndex","imgTag","random","max","fortune","num","j","push","Math","floor","choice","choicedBall","firstChoicedBall","ballList","filter","body","label","set","createElement","setAttribute","left","width","top","position","appendChild","x","y","hiddenImg","remove","create","ball","circle","innerWidth","density","frictionAir","restitution","friction","render","sprite","texture","xScale","yScale","timeScale","add","removeBall","circleRadius","fadeOut","setInterval","fadeOutBall","setTimeout","clearInterval","webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","l","call","m","c","d","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","Common","_nextId","_seed","_nowStartTime","Date","_warnedOnce","_decomp","extend","obj","deep","argsStart","args","deepClone","arguments","source","prop","clone","keys","values","path","begin","end","split","slice","val","parts","shuffle","array","temp","choose","choices","isElement","HTMLElement","nodeType","nodeName","isArray","toString","isFunction","isPlainObject","isString","clamp","min","sign","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","concat","Array","info","warn","warnOnce","message","join","deprecated","warning","chain","nextId","indexOf","haystack","needle","map","list","func","mapped","topologicalSort","graph","result","visited","node","_topologicalSort","neighbors","neighbor","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","setDecomp","decomp","getDecomp","global","e","Bounds","vertices","bounds","update","velocity","Infinity","vertex","contains","point","overlaps","boundsA","boundsB","translate","vector","shift","deltaX","deltaY","Vector","magnitude","sqrt","magnitudeSquared","rotate","angle","output","cos","sin","rotateAbout","normalise","dot","vectorA","vectorB","cross","cross3","vectorC","sub","mult","scalar","div","perp","negate","neg","atan2","_temp","Vertices","points","index","isInternal","fromPath","pathPattern","match","parseFloat","centre","area","mean","average","signed","abs","inertia","mass","numerator","denominator","v","vertice","dx","dy","nextVertice","scale","scaleX","scaleY","delta","chamfer","quality","qualityMin","qualityMax","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","pow","radiusVector","midNormal","scaledVertex","precision","alpha","acos","theta","clockwiseSort","sort","vertexA","vertexB","isConvex","flag","k","z","hull","upper","lower","pop","Events","on","eventNames","callback","names","events","off","callbacks","newCallbacks","trigger","event","eventClone","Composite","Body","options","id","type","parent","isModified","constraints","composites","plugin","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","isStatic","allBodies","allConstraints","allComposites","move","rebase","translation","recursive","rotation","setPosition","Sleeping","Render","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","frictionStatic","collisionFilter","category","mask","group","slop","visible","opacity","strokeStyle","fillStyle","lineWidth","xOffset","yOffset","positionPrev","anglePrev","axes","_original","_initProperties","nextGroup","isNonColliding","nextCategory","defaultFillStyle","defaultStrokeStyle","defaultLineWidth","settings","setStatic","setMass","setDensity","setInertia","setVertices","setAngle","setVelocity","setAngularVelocity","setParts","setCentre","part","inverseMass","inverseInertia","moment","fromVertices","autoHull","hullCentre","total","_totalProperties","relative","totalArea","totalInertia","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","offset","properties","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","afterCollisions","pairs","pair","isActive","collision","bodyA","bodyB","sleepingBody","movingBody","wasSleeping","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","impulse","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","share","normal","normalVelocity","relativeVelocity","zero","postSolveAll","Pair","Contact","timestamp","parentA","parentB","contacts","activeContacts","separation","confirmedActive","timeCreated","timeUpdated","supports","collided","support","contactId","contact","depth","setActive","gradient","toFixed","axis","xx","Bodies","rectangle","height","trapezoid","slope","roof","x1","x2","x3","verticesPath","maxSides","sides","ceil","polygon","PI","yy","vertexSets","flagInternal","removeCollinear","minimumArea","removeDuplicatePoints","canDecomp","isConcave","Boolean","quickDecomp","concave","makeCCW","removeCollinearPoints","decomposed","chunk","chunkVertices","coincident_max_dist","partA","partB","pav","pbv","da","db","Mouse","element","mouse","absolute","mousedownPosition","mouseupPosition","wheelDelta","button","pixelRatio","getAttribute","sourceEvents","mousemove","mousedown","mouseup","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","clearSourceEvents","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","pageY","clientWidth","clientHeight","Detector","SAT","collisions","broadphasePairs","engine","pairsTable","table","canCollide","pairId","previousCollision","collides","filterA","filterB","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","tangent","penetration","verticesB","_findSupports","verticesA","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","prevIndex","nextIndex","Plugin","_registry","register","isPlugin","registered","pluginVersion","versionParse","version","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","used","isFor","parsed","for","versionSatisfies","use","plugins","uses","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","exec","major","minor","patch","isRange","operator","prerelease","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_goodFps","_goodDelta","controller","frameRequestId","timing","historySize","deltaHistory","lastTime","lastTimestamp","lastElapsed","timestampElapsed","timestampElapsedHistory","engineDeltaHistory","engineElapsedHistory","elapsedHistory","background","wireframeBackground","hasBounds","enabled","wireframes","showSleeping","showDebug","showStats","showPerformance","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","run","time","_updateTiming","world","stats","stop","_getPixelRatio","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","endViewTransform","startTime","currentBackground","_applyBackground","globalCompositeOperation","fillRect","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","grid","sections","font","textBaseline","textAlign","section","fillText","lastEngineDelta","lastDelta","deltaMean","_mean","elapsedMean","engineDeltaMean","engineElapsedMean","timestampElapsedMean","rateMean","fps","graphHeight","gap","round","count","indicator","plotY","beginPath","moveTo","lineTo","stroke","arc","closePath","coils","fill","globalAlpha","_getTexture","drawImage","rect","corrected","normalPosX","normalPosY","bucketKeys","buckets","bucketId","region","bucketWidth","bucketHeight","inspector","selected","item","setLineDash","selectStart","selectBounds","unshift","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","cssBackground","backgroundSize","normalImpulse","tangentImpulse","Engine","Resolver","Pairs","Grid","positionIterations","velocityIterations","constraintIterations","gravity","broadphase","metrics","gridPairs","_bodiesApplyGravity","_bodiesUpdate","pairsList","removeOld","collisionStart","preSolvePosition","solvePosition","postSolvePosition","preSolveVelocity","solveVelocity","collisionActive","collisionEnd","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","activeCount","bodyBtoA","contactShare","contactCount","tempA","tempB","tempC","tempD","contactVertex","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","velocityPointB","tangentVelocity","tangentSpeed","tangentVelocityDirection","normalForce","maxFriction","oAcN","oBcN","contactNormalImpulse","contactTangentImpulse","_pairMaxIdleLife","indexesToRemove","pairIndex","forceUpdate","col","row","bucket","gridChanged","newRegion","_getRegion","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairKeys","Matter","Composites","MouseConstraint","Query","Runner","Svg","before","after","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","mouseConstraint","_triggerEvents","mouseEvents","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","_frameTimeout","clearTimeout","deltaSampleSize","counterTimestamp","frameCounter","timePrev","timeScalePrev","isFixed","runner","deltaMin","deltaMax","tick","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","RigidBody","engineWorld","innerHeight","positionX","positionY","rectWidth","rectHeight","color","Wall","rightWall","leftWall","Floor","brown","yellow","Screen","forCanvashighResolution","removingBallView","endView","cautionBar","score","sumScore","tags","showElemnet","ele","classList","hiddenElement","pointerEventsOn","pointerEventsOff","showRemovingBallView","showGameOverView","init","hiddenBar","innerText","showBar","showUnionEffect","screen","oldTime","diff","hiddenUnionEffect","addScore","require","Game","startWrapper","endingTextBtn","endingImgBtn","scorePoint","setBall","positionYList","wall","collisionBool","isCollisionAnimation","soundOn","rendering","game","ballA","ballB","ballHeight","colliding","balls","removeBalls","generate","removeGameOverBalls","eleNum","removeAllBalls","currentTime","display","touchEventController","passive"],"sourceRoot":""}